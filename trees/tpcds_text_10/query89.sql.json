Created the lattice
HiveAggregate : 1
HiveProject : 13
HiveJoin : 9
HiveSortLimit : 2
HiveTableScan : 4
HiveFilter : 6
Raajay: Total Rels = 35
Raajay: Total plans = 9
Begin exhaustive search for all query plans.
HiveSortLimit(fetch=[100]): rowcount = 1.0, cumulative cost = {2.8802192849955905E7 rows, 0.0 cpu, 0.0 io}, id = 580
  HiveSortLimit(sort0=[$8], sort1=[$3], dir0=[ASC], dir1=[ASC]): rowcount = 1.0, cumulative cost = {2.8802192849955905E7 rows, 0.0 cpu, 0.0 io}, id = 570
    HiveProject(i_category=[$0], i_class=[$1], i_brand=[$2], s_store_name=[$3], s_company_name=[$4], d_moy=[$5], sum_sales=[$6], avg_monthly_sales=[$7], (- (tok_table_or_col sum_sales) (tok_table_or_col avg_monthly_sales))=[-($6, $7)]): rowcount = 1.0, cumulative cost = {2.8802192849955905E7 rows, 0.0 cpu, 0.0 io}, id = 560
      HiveFilter(condition=[>(when(<>($7, 0E0), /(abs(-($6, $7)), $7), null), 1.0000000000000000555E-1)]): rowcount = 1.0, cumulative cost = {2.8802192849955905E7 rows, 0.0 cpu, 0.0 io}, id = 554
        HiveProject((tok_table_or_col i_category)=[$0], (tok_table_or_col i_class)=[$1], (tok_table_or_col i_brand)=[$2], (tok_table_or_col s_store_name)=[$3], (tok_table_or_col s_company_name)=[$4], (tok_table_or_col d_moy)=[$5], (tok_function sum (tok_table_or_col ss_sales_price))=[$6], avg_window_0=[avg($6) OVER (PARTITION BY $0, $2, $3, $4 ORDER BY $0, $2, $3, $4 ROWS BETWEEN 2147483647 FOLLOWING AND 2147483647 PRECEDING)]): rowcount = 3.316794180790472, cumulative cost = {2.8802192849955905E7 rows, 0.0 cpu, 0.0 io}, id = 544
          HiveAggregate(group=[{0, 1, 2, 3, 4, 5}], agg#0=[sum($6)]): rowcount = 3.316794180790472, cumulative cost = {2.8802192849955905E7 rows, 0.0 cpu, 0.0 io}, id = 535
            HiveProject($f0=[$3], $f1=[$2], $f2=[$1], $f3=[$12], $f4=[$13], $f5=[$10], $f6=[$7]): rowcount = 3.94744227195854, cumulative cost = {2.8802192849955905E7 rows, 0.0 cpu, 0.0 io}, id = 523
              HiveJoin(condition=[=($6, $11)], joinType=[inner], algorithm=[none], cost=[{105.94744227195854 rows, 0.0 cpu, 0.0 io}]): rowcount = 3.94744227195854, cumulative cost = {2.8802192849955905E7 rows, 0.0 cpu, 0.0 io}, id = 441
                HiveProject(i_item_sk=[$7], i_brand=[$8], i_class=[$9], i_category=[$10], ss_sold_date_sk=[$3], ss_item_sk=[$4], ss_store_sk=[$5], ss_sales_price=[$6], d_date_sk=[$0], d_year=[$1], d_moy=[$2]): rowcount = 3.94744227195854, cumulative cost = {2.8802086902513634E7 rows, 0.0 cpu, 0.0 io}, id = 436
                  HiveProject(d_date_sk=[$8], d_year=[$9], d_moy=[$10], ss_sold_date_sk=[$4], ss_item_sk=[$5], ss_store_sk=[$6], ss_sales_price=[$7], i_item_sk=[$0], i_brand=[$1], i_class=[$2], i_category=[$3]): rowcount = 3.94744227195854, cumulative cost = {2.8802086902513634E7 rows, 0.0 cpu, 0.0 io}, id = 435
                    HiveJoin(condition=[=($4, $8)], joinType=[inner], algorithm=[none], cost=[{1094.3367487450707 rows, 0.0 cpu, 0.0 io}]): rowcount = 3.94744227195854, cumulative cost = {2.8802086902513634E7 rows, 0.0 cpu, 0.0 io}, id = 434
                      HiveJoin(condition=[=($5, $0)], joinType=[inner], algorithm=[none], cost=[{2.880099256576489E7 rows, 0.0 cpu, 0.0 io}]): rowcount = 442.11353445935646, cumulative cost = {2.880099256576489E7 rows, 0.0 cpu, 0.0 io}, id = 431
                        HiveProject(i_item_sk=[$0], i_brand=[$8], i_class=[$10], i_category=[$12]): rowcount = 1.5657648903419454, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 429
                          HiveFilter(condition=[OR(AND(IN($12, 'Home', 'Books', 'Electronics'), IN($10, 'wallpaper', 'parenting', 'musical')), AND(IN($12, 'Shoes', 'Jewelry', 'Men'), IN($10, 'womens', 'birdal', 'pants')))]): rowcount = 1.5657648903419454, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 428
                            HiveFilter(condition=[AND(OR(IN($10, 'wallpaper', 'parenting', 'musical'), IN($10, 'womens', 'birdal', 'pants')), OR(IN($12, 'Home', 'Books', 'Electronics'), IN($12, 'Shoes', 'Jewelry', 'Men')))]): rowcount = 89.11985294117663, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 427
                              HiveFilter(condition=[AND(OR(IN($10, 'wallpaper', 'parenting', 'musical'), IN($10, 'womens', 'birdal', 'pants')), OR(IN($12, 'Home', 'Books', 'Electronics'), IN($12, 'Shoes', 'Jewelry', 'Men')))]): rowcount = 3015.0000000000027, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 426
                                HiveFilter(condition=[AND(OR(IN($10, 'wallpaper', 'parenting', 'musical'), IN($10, 'womens', 'birdal', 'pants')), OR(IN($12, 'Home', 'Books', 'Electronics'), IN($12, 'Shoes', 'Jewelry', 'Men')))]): rowcount = 3015.0000000000027, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 425
                                  HiveTableScan(table=[[tpcds_text_10.item]]): rowcount = 102000.0, cumulative cost = {0}, id = 212
                        HiveProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_store_sk=[$7], ss_sales_price=[$13]): rowcount = 2.8800991E7, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 430
                          HiveTableScan(table=[[tpcds_text_10.store_sales]]): rowcount = 2.8800991E7, cumulative cost = {0}, id = 218
                      HiveProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8]): rowcount = 652.2232142857142, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 433
                        HiveFilter(condition=[IN($6, 2000)]): rowcount = 652.2232142857142, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 432
                          HiveTableScan(table=[[tpcds_text_10.date_dim]]): rowcount = 73049.0, cumulative cost = {0}, id = 221
                HiveProject(s_store_sk=[$0], s_store_name=[$5], s_company_name=[$17]): rowcount = 102.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 438
                  HiveTableScan(table=[[tpcds_text_10.store]]): rowcount = 102.0, cumulative cost = {0}, id = 225

HiveSortLimit(fetch=[100]): rowcount = 1.0, cumulative cost = {2.8802631016048092E7 rows, 0.0 cpu, 0.0 io}, id = 584
  HiveSortLimit(sort0=[$8], sort1=[$3], dir0=[ASC], dir1=[ASC]): rowcount = 1.0, cumulative cost = {2.8802631016048092E7 rows, 0.0 cpu, 0.0 io}, id = 572
    HiveProject(i_category=[$0], i_class=[$1], i_brand=[$2], s_store_name=[$3], s_company_name=[$4], d_moy=[$5], sum_sales=[$6], avg_monthly_sales=[$7], (- (tok_table_or_col sum_sales) (tok_table_or_col avg_monthly_sales))=[-($6, $7)]): rowcount = 1.0, cumulative cost = {2.8802631016048092E7 rows, 0.0 cpu, 0.0 io}, id = 561
      HiveFilter(condition=[>(when(<>($7, 0E0), /(abs(-($6, $7)), $7), null), 1.0000000000000000555E-1)]): rowcount = 1.0, cumulative cost = {2.8802631016048092E7 rows, 0.0 cpu, 0.0 io}, id = 556
        HiveProject((tok_table_or_col i_category)=[$0], (tok_table_or_col i_class)=[$1], (tok_table_or_col i_brand)=[$2], (tok_table_or_col s_store_name)=[$3], (tok_table_or_col s_company_name)=[$4], (tok_table_or_col d_moy)=[$5], (tok_function sum (tok_table_or_col ss_sales_price))=[$6], avg_window_0=[avg($6) OVER (PARTITION BY $0, $2, $3, $4 ORDER BY $0, $2, $3, $4 ROWS BETWEEN 2147483647 FOLLOWING AND 2147483647 PRECEDING)]): rowcount = 3.9196696240491846, cumulative cost = {2.8802631016048092E7 rows, 0.0 cpu, 0.0 io}, id = 547
          HiveAggregate(group=[{0, 1, 2, 3, 4, 5}], agg#0=[sum($6)]): rowcount = 3.9196696240491846, cumulative cost = {2.8802631016048092E7 rows, 0.0 cpu, 0.0 io}, id = 537
            HiveProject($f0=[$3], $f1=[$2], $f2=[$1], $f3=[$12], $f4=[$13], $f5=[$10], $f6=[$7]): rowcount = 3.94744227195854, cumulative cost = {2.8802631016048092E7 rows, 0.0 cpu, 0.0 io}, id = 531
              HiveProject(i_item_sk=[$0], i_brand=[$1], i_class=[$2], i_category=[$3], ss_sold_date_sk=[$4], ss_item_sk=[$5], ss_store_sk=[$6], ss_sales_price=[$7], d_date_sk=[$11], d_year=[$12], d_moy=[$13], s_store_sk=[$8], s_store_name=[$9], s_company_name=[$10]): rowcount = 3.94744227195854, cumulative cost = {2.8802631016048092E7 rows, 0.0 cpu, 0.0 io}, id = 521
                HiveJoin(condition=[=($4, $11)], joinType=[inner], algorithm=[none], cost=[{1094.3367487450707 rows, 0.0 cpu, 0.0 io}]): rowcount = 3.94744227195854, cumulative cost = {2.8802631016048092E7 rows, 0.0 cpu, 0.0 io}, id = 474
                  HiveProject(i_item_sk=[$7], i_brand=[$8], i_class=[$9], i_category=[$10], ss_sold_date_sk=[$3], ss_item_sk=[$4], ss_store_sk=[$5], ss_sales_price=[$6], s_store_sk=[$0], s_store_name=[$1], s_company_name=[$2]): rowcount = 442.11353445935646, cumulative cost = {2.8801536679299347E7 rows, 0.0 cpu, 0.0 io}, id = 470
                    HiveProject(s_store_sk=[$8], s_store_name=[$9], s_company_name=[$10], ss_sold_date_sk=[$4], ss_item_sk=[$5], ss_store_sk=[$6], ss_sales_price=[$7], i_item_sk=[$0], i_brand=[$1], i_class=[$2], i_category=[$3]): rowcount = 442.11353445935646, cumulative cost = {2.8801536679299347E7 rows, 0.0 cpu, 0.0 io}, id = 469
                      HiveJoin(condition=[=($6, $8)], joinType=[inner], algorithm=[none], cost=[{544.1135344593565 rows, 0.0 cpu, 0.0 io}]): rowcount = 442.11353445935646, cumulative cost = {2.8801536679299347E7 rows, 0.0 cpu, 0.0 io}, id = 468
                        HiveJoin(condition=[=($5, $0)], joinType=[inner], algorithm=[none], cost=[{2.880099256576489E7 rows, 0.0 cpu, 0.0 io}]): rowcount = 442.11353445935646, cumulative cost = {2.880099256576489E7 rows, 0.0 cpu, 0.0 io}, id = 466
                          HiveProject(i_item_sk=[$0], i_brand=[$8], i_class=[$10], i_category=[$12]): rowcount = 1.5657648903419454, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 464
                            HiveFilter(condition=[OR(AND(IN($12, 'Home', 'Books', 'Electronics'), IN($10, 'wallpaper', 'parenting', 'musical')), AND(IN($12, 'Shoes', 'Jewelry', 'Men'), IN($10, 'womens', 'birdal', 'pants')))]): rowcount = 1.5657648903419454, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 463
                              HiveFilter(condition=[AND(OR(IN($10, 'wallpaper', 'parenting', 'musical'), IN($10, 'womens', 'birdal', 'pants')), OR(IN($12, 'Home', 'Books', 'Electronics'), IN($12, 'Shoes', 'Jewelry', 'Men')))]): rowcount = 89.11985294117663, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 462
                                HiveFilter(condition=[AND(OR(IN($10, 'wallpaper', 'parenting', 'musical'), IN($10, 'womens', 'birdal', 'pants')), OR(IN($12, 'Home', 'Books', 'Electronics'), IN($12, 'Shoes', 'Jewelry', 'Men')))]): rowcount = 3015.0000000000027, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 461
                                  HiveFilter(condition=[AND(OR(IN($10, 'wallpaper', 'parenting', 'musical'), IN($10, 'womens', 'birdal', 'pants')), OR(IN($12, 'Home', 'Books', 'Electronics'), IN($12, 'Shoes', 'Jewelry', 'Men')))]): rowcount = 3015.0000000000027, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 460
                                    HiveTableScan(table=[[tpcds_text_10.item]]): rowcount = 102000.0, cumulative cost = {0}, id = 212
                          HiveProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_store_sk=[$7], ss_sales_price=[$13]): rowcount = 2.8800991E7, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 465
                            HiveTableScan(table=[[tpcds_text_10.store_sales]]): rowcount = 2.8800991E7, cumulative cost = {0}, id = 218
                        HiveProject(s_store_sk=[$0], s_store_name=[$5], s_company_name=[$17]): rowcount = 102.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 467
                          HiveTableScan(table=[[tpcds_text_10.store]]): rowcount = 102.0, cumulative cost = {0}, id = 225
                  HiveProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8]): rowcount = 652.2232142857142, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 473
                    HiveFilter(condition=[IN($6, 2000)]): rowcount = 652.2232142857142, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 472
                      HiveTableScan(table=[[tpcds_text_10.date_dim]]): rowcount = 73049.0, cumulative cost = {0}, id = 221

HiveSortLimit(fetch=[100]): rowcount = 1.0, cumulative cost = {2.9058902441778593E7 rows, 0.0 cpu, 0.0 io}, id = 578
  HiveSortLimit(sort0=[$8], sort1=[$3], dir0=[ASC], dir1=[ASC]): rowcount = 1.0, cumulative cost = {2.9058902441778593E7 rows, 0.0 cpu, 0.0 io}, id = 574
    HiveProject(i_category=[$0], i_class=[$1], i_brand=[$2], s_store_name=[$3], s_company_name=[$4], d_moy=[$5], sum_sales=[$6], avg_monthly_sales=[$7], (- (tok_table_or_col sum_sales) (tok_table_or_col avg_monthly_sales))=[-($6, $7)]): rowcount = 1.0, cumulative cost = {2.9058902441778593E7 rows, 0.0 cpu, 0.0 io}, id = 562
      HiveFilter(condition=[>(when(<>($7, 0E0), /(abs(-($6, $7)), $7), null), 1.0000000000000000555E-1)]): rowcount = 1.0, cumulative cost = {2.9058902441778593E7 rows, 0.0 cpu, 0.0 io}, id = 551
        HiveProject((tok_table_or_col i_category)=[$0], (tok_table_or_col i_class)=[$1], (tok_table_or_col i_brand)=[$2], (tok_table_or_col s_store_name)=[$3], (tok_table_or_col s_company_name)=[$4], (tok_table_or_col d_moy)=[$5], (tok_function sum (tok_table_or_col ss_sales_price))=[$6], avg_window_0=[avg($6) OVER (PARTITION BY $0, $2, $3, $4 ORDER BY $0, $2, $3, $4 ROWS BETWEEN 2147483647 FOLLOWING AND 2147483647 PRECEDING)]): rowcount = 3.316794180790472, cumulative cost = {2.9058902441778593E7 rows, 0.0 cpu, 0.0 io}, id = 549
          HiveAggregate(group=[{0, 1, 2, 3, 4, 5}], agg#0=[sum($6)]): rowcount = 3.316794180790472, cumulative cost = {2.9058902441778593E7 rows, 0.0 cpu, 0.0 io}, id = 533
            HiveProject($f0=[$3], $f1=[$2], $f2=[$1], $f3=[$12], $f4=[$13], $f5=[$10], $f6=[$7]): rowcount = 3.9474422719585394, cumulative cost = {2.9058902441778593E7 rows, 0.0 cpu, 0.0 io}, id = 525
              HiveJoin(condition=[=($6, $11)], joinType=[inner], algorithm=[none], cost=[{105.94744227195854 rows, 0.0 cpu, 0.0 io}]): rowcount = 3.9474422719585394, cumulative cost = {2.9058902441778593E7 rows, 0.0 cpu, 0.0 io}, id = 439
                HiveProject(i_item_sk=[$7], i_brand=[$8], i_class=[$9], i_category=[$10], ss_sold_date_sk=[$3], ss_item_sk=[$4], ss_store_sk=[$5], ss_sales_price=[$6], d_date_sk=[$0], d_year=[$1], d_moy=[$2]): rowcount = 3.9474422719585394, cumulative cost = {2.9058796494336322E7 rows, 0.0 cpu, 0.0 io}, id = 437
                  HiveJoin(condition=[=($4, $7)], joinType=[inner], algorithm=[none], cost=[{257153.27112203318 rows, 0.0 cpu, 0.0 io}]): rowcount = 3.9474422719585394, cumulative cost = {2.9058796494336322E7 rows, 0.0 cpu, 0.0 io}, id = 424
                    HiveJoin(condition=[=($3, $0)], joinType=[inner], algorithm=[none], cost=[{2.8801643223214287E7 rows, 0.0 cpu, 0.0 io}]): rowcount = 257151.70535714284, cumulative cost = {2.8801643223214287E7 rows, 0.0 cpu, 0.0 io}, id = 418
                      HiveProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8]): rowcount = 652.2232142857142, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 416
                        HiveFilter(condition=[IN($6, 2000)]): rowcount = 652.2232142857142, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 415
                          HiveTableScan(table=[[tpcds_text_10.date_dim]]): rowcount = 73049.0, cumulative cost = {0}, id = 221
                      HiveProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_store_sk=[$7], ss_sales_price=[$13]): rowcount = 2.8800991E7, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 417
                        HiveTableScan(table=[[tpcds_text_10.store_sales]]): rowcount = 2.8800991E7, cumulative cost = {0}, id = 218
                    HiveProject(i_item_sk=[$0], i_brand=[$8], i_class=[$10], i_category=[$12]): rowcount = 1.5657648903419454, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 423
                      HiveFilter(condition=[OR(AND(IN($12, 'Home', 'Books', 'Electronics'), IN($10, 'wallpaper', 'parenting', 'musical')), AND(IN($12, 'Shoes', 'Jewelry', 'Men'), IN($10, 'womens', 'birdal', 'pants')))]): rowcount = 1.5657648903419454, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 422
                        HiveFilter(condition=[AND(OR(IN($10, 'wallpaper', 'parenting', 'musical'), IN($10, 'womens', 'birdal', 'pants')), OR(IN($12, 'Home', 'Books', 'Electronics'), IN($12, 'Shoes', 'Jewelry', 'Men')))]): rowcount = 89.11985294117663, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 421
                          HiveFilter(condition=[AND(OR(IN($10, 'wallpaper', 'parenting', 'musical'), IN($10, 'womens', 'birdal', 'pants')), OR(IN($12, 'Home', 'Books', 'Electronics'), IN($12, 'Shoes', 'Jewelry', 'Men')))]): rowcount = 3015.0000000000027, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 420
                            HiveFilter(condition=[AND(OR(IN($10, 'wallpaper', 'parenting', 'musical'), IN($10, 'womens', 'birdal', 'pants')), OR(IN($12, 'Home', 'Books', 'Electronics'), IN($12, 'Shoes', 'Jewelry', 'Men')))]): rowcount = 3015.0000000000027, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 419
                              HiveTableScan(table=[[tpcds_text_10.item]]): rowcount = 102000.0, cumulative cost = {0}, id = 212
                HiveProject(s_store_sk=[$0], s_store_name=[$5], s_company_name=[$17]): rowcount = 102.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 438
                  HiveTableScan(table=[[tpcds_text_10.store]]): rowcount = 102.0, cumulative cost = {0}, id = 225

HiveSortLimit(fetch=[100]): rowcount = 1.0, cumulative cost = {5.760317990251363E7 rows, 0.0 cpu, 0.0 io}, id = 579
  HiveSortLimit(sort0=[$8], sort1=[$3], dir0=[ASC], dir1=[ASC]): rowcount = 1.0, cumulative cost = {5.760317990251363E7 rows, 0.0 cpu, 0.0 io}, id = 576
    HiveProject(i_category=[$0], i_class=[$1], i_brand=[$2], s_store_name=[$3], s_company_name=[$4], d_moy=[$5], sum_sales=[$6], avg_monthly_sales=[$7], (- (tok_table_or_col sum_sales) (tok_table_or_col avg_monthly_sales))=[-($6, $7)]): rowcount = 1.0, cumulative cost = {5.760317990251363E7 rows, 0.0 cpu, 0.0 io}, id = 567
      HiveFilter(condition=[>(when(<>($7, 0E0), /(abs(-($6, $7)), $7), null), 1.0000000000000000555E-1)]): rowcount = 1.0, cumulative cost = {5.760317990251363E7 rows, 0.0 cpu, 0.0 io}, id = 550
        HiveProject((tok_table_or_col i_category)=[$0], (tok_table_or_col i_class)=[$1], (tok_table_or_col i_brand)=[$2], (tok_table_or_col s_store_name)=[$3], (tok_table_or_col s_company_name)=[$4], (tok_table_or_col d_moy)=[$5], (tok_function sum (tok_table_or_col ss_sales_price))=[$6], avg_window_0=[avg($6) OVER (PARTITION BY $0, $2, $3, $4 ORDER BY $0, $2, $3, $4 ROWS BETWEEN 2147483647 FOLLOWING AND 2147483647 PRECEDING)]): rowcount = 3.9298341003792787, cumulative cost = {5.760317990251363E7 rows, 0.0 cpu, 0.0 io}, id = 543
          HiveAggregate(group=[{0, 1, 2, 3, 4, 5}], agg#0=[sum($6)]): rowcount = 3.9298341003792787, cumulative cost = {5.760317990251363E7 rows, 0.0 cpu, 0.0 io}, id = 540
            HiveProject($f0=[$3], $f1=[$2], $f2=[$1], $f3=[$12], $f4=[$13], $f5=[$10], $f6=[$7]): rowcount = 3.94744227195854, cumulative cost = {5.760317990251363E7 rows, 0.0 cpu, 0.0 io}, id = 524
              HiveProject(i_item_sk=[$0], i_brand=[$1], i_class=[$2], i_category=[$3], ss_sold_date_sk=[$4], ss_item_sk=[$5], ss_store_sk=[$6], ss_sales_price=[$7], d_date_sk=[$11], d_year=[$12], d_moy=[$13], s_store_sk=[$8], s_store_name=[$9], s_company_name=[$10]): rowcount = 3.94744227195854, cumulative cost = {5.760317990251363E7 rows, 0.0 cpu, 0.0 io}, id = 519
                HiveJoin(condition=[=($4, $11)], joinType=[inner], algorithm=[none], cost=[{1094.3367487450707 rows, 0.0 cpu, 0.0 io}]): rowcount = 3.94744227195854, cumulative cost = {5.760317990251363E7 rows, 0.0 cpu, 0.0 io}, id = 476
                  HiveProject(i_item_sk=[$7], i_brand=[$8], i_class=[$9], i_category=[$10], ss_sold_date_sk=[$3], ss_item_sk=[$4], ss_store_sk=[$5], ss_sales_price=[$6], s_store_sk=[$0], s_store_name=[$1], s_company_name=[$2]): rowcount = 442.11353445935646, cumulative cost = {5.760208556576489E7 rows, 0.0 cpu, 0.0 io}, id = 471
                    HiveJoin(condition=[=($4, $7)], joinType=[inner], algorithm=[none], cost=[{2.880099256576489E7 rows, 0.0 cpu, 0.0 io}]): rowcount = 442.11353445935646, cumulative cost = {5.760208556576489E7 rows, 0.0 cpu, 0.0 io}, id = 459
                      HiveJoin(condition=[=($5, $0)], joinType=[inner], algorithm=[none], cost=[{2.8801093E7 rows, 0.0 cpu, 0.0 io}]): rowcount = 2.8800991E7, cumulative cost = {2.8801093E7 rows, 0.0 cpu, 0.0 io}, id = 453
                        HiveProject(s_store_sk=[$0], s_store_name=[$5], s_company_name=[$17]): rowcount = 102.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 451
                          HiveTableScan(table=[[tpcds_text_10.store]]): rowcount = 102.0, cumulative cost = {0}, id = 225
                        HiveProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_store_sk=[$7], ss_sales_price=[$13]): rowcount = 2.8800991E7, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 452
                          HiveTableScan(table=[[tpcds_text_10.store_sales]]): rowcount = 2.8800991E7, cumulative cost = {0}, id = 218
                      HiveProject(i_item_sk=[$0], i_brand=[$8], i_class=[$10], i_category=[$12]): rowcount = 1.5657648903419454, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 458
                        HiveFilter(condition=[OR(AND(IN($12, 'Home', 'Books', 'Electronics'), IN($10, 'wallpaper', 'parenting', 'musical')), AND(IN($12, 'Shoes', 'Jewelry', 'Men'), IN($10, 'womens', 'birdal', 'pants')))]): rowcount = 1.5657648903419454, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 457
                          HiveFilter(condition=[AND(OR(IN($10, 'wallpaper', 'parenting', 'musical'), IN($10, 'womens', 'birdal', 'pants')), OR(IN($12, 'Home', 'Books', 'Electronics'), IN($12, 'Shoes', 'Jewelry', 'Men')))]): rowcount = 89.11985294117663, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 456
                            HiveFilter(condition=[AND(OR(IN($10, 'wallpaper', 'parenting', 'musical'), IN($10, 'womens', 'birdal', 'pants')), OR(IN($12, 'Home', 'Books', 'Electronics'), IN($12, 'Shoes', 'Jewelry', 'Men')))]): rowcount = 3015.0000000000027, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 455
                              HiveFilter(condition=[AND(OR(IN($10, 'wallpaper', 'parenting', 'musical'), IN($10, 'womens', 'birdal', 'pants')), OR(IN($12, 'Home', 'Books', 'Electronics'), IN($12, 'Shoes', 'Jewelry', 'Men')))]): rowcount = 3015.0000000000027, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 454
                                HiveTableScan(table=[[tpcds_text_10.item]]): rowcount = 102000.0, cumulative cost = {0}, id = 212
                  HiveProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8]): rowcount = 652.2232142857142, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 473
                    HiveFilter(condition=[IN($6, 2000)]): rowcount = 652.2232142857142, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 472
                      HiveTableScan(table=[[tpcds_text_10.date_dim]]): rowcount = 73049.0, cumulative cost = {0}, id = 221

{"STAGE DEPENDENCIES":{"Stage-1":{"ROOT STAGE":"TRUE"},"Stage-0":{"DEPENDENT STAGES":"Stage-1"}},"STAGE PLANS":{"Stage-1":{"Tez":{"Edges:":{"Map 2":[{"parent":"Map 1","type":"BROADCAST_EDGE"},{"parent":"Map 6","type":"BROADCAST_EDGE"},{"parent":"Map 7","type":"BROADCAST_EDGE"}],"Reducer 3":{"parent":"Map 2","type":"SIMPLE_EDGE"},"Reducer 4":{"parent":"Reducer 3","type":"SIMPLE_EDGE"},"Reducer 5":{"parent":"Reducer 4","type":"SIMPLE_EDGE"}},"DagName:":"wentingt_20180312113147_a6412475-5168-4a64-9a6c-4660608c779a:1","Vertices:":{"Map 1":{"Map Operator Tree:":[{"TableScan":{"alias:":"item","Statistics:":"Num rows: 102000 Data size: 28753325 Basic stats: COMPLETE Column stats: NONE","children":{"Filter Operator":{"predicate:":"(((((i_class) IN ('wallpaper', 'parenting', 'musical') or (i_class) IN ('womens', 'birdal', 'pants')) and ((i_category) IN ('Home', 'Books', 'Electronics') or (i_category) IN ('Shoes', 'Jewelry', 'Men'))) and (((i_category) IN ('Home', 'Books', 'Electronics') and (i_class) IN ('wallpaper', 'parenting', 'musical')) or ((i_category) IN ('Shoes', 'Jewelry', 'Men') and (i_class) IN ('womens', 'birdal', 'pants')))) and i_item_sk is not null) (type: boolean)","Statistics:":"Num rows: 25500 Data size: 7188331 Basic stats: COMPLETE Column stats: NONE","children":{"Select Operator":{"expressions:":"i_item_sk (type: int), i_brand (type: string), i_class (type: string), i_category (type: string)","outputColumnNames:":["_col0","_col1","_col2","_col3"],"Statistics:":"Num rows: 25500 Data size: 7188331 Basic stats: COMPLETE Column stats: NONE","children":{"Reduce Output Operator":{"key expressions:":"_col0 (type: int)","sort order:":"+","Map-reduce partition columns:":"_col0 (type: int)","Statistics:":"Num rows: 25500 Data size: 7188331 Basic stats: COMPLETE Column stats: NONE","value expressions:":"_col1 (type: string), _col2 (type: string), _col3 (type: string)"}}}}}}}}]},"Map 2":{"Map Operator Tree:":[{"TableScan":{"alias:":"store_sales","Statistics:":"Num rows: 28800991 Data size: 3970120305 Basic stats: COMPLETE Column stats: NONE","children":{"Filter Operator":{"predicate:":"((ss_item_sk is not null and ss_sold_date_sk is not null) and ss_store_sk is not null) (type: boolean)","Statistics:":"Num rows: 3600124 Data size: 496265055 Basic stats: COMPLETE Column stats: NONE","children":{"Select Operator":{"expressions:":"ss_sold_date_sk (type: int), ss_item_sk (type: int), ss_store_sk (type: int), ss_sales_price (type: float)","outputColumnNames:":["_col0","_col1","_col2","_col3"],"Statistics:":"Num rows: 3600124 Data size: 496265055 Basic stats: COMPLETE Column stats: NONE","children":{"Map Join Operator":{"condition map:":[{"":"Inner Join 0 to 1"}],"keys:":{"0":"_col0 (type: int)","1":"_col1 (type: int)"},"outputColumnNames:":["_col1","_col2","_col3","_col4","_col6","_col7"],"input vertices:":{"0":"Map 1"},"Statistics:":"Num rows: 3960136 Data size: 545891572 Basic stats: COMPLETE Column stats: NONE","HybridGraceHashJoin:":"true","children":{"Map Join Operator":{"condition map:":[{"":"Inner Join 0 to 1"}],"keys:":{"0":"_col4 (type: int)","1":"_col0 (type: int)"},"outputColumnNames:":["_col1","_col2","_col3","_col6","_col7","_col10"],"input vertices:":{"1":"Map 6"},"Statistics:":"Num rows: 4356149 Data size: 600480742 Basic stats: COMPLETE Column stats: NONE","HybridGraceHashJoin:":"true","children":{"Map Join Operator":{"condition map:":[{"":"Inner Join 0 to 1"}],"keys:":{"0":"_col6 (type: int)","1":"_col0 (type: int)"},"outputColumnNames:":["_col1","_col2","_col3","_col7","_col10","_col12","_col13"],"input vertices:":{"1":"Map 7"},"Statistics:":"Num rows: 4791764 Data size: 660528830 Basic stats: COMPLETE Column stats: NONE","HybridGraceHashJoin:":"true","children":{"Select Operator":{"expressions:":"_col1 (type: string), _col2 (type: string), _col3 (type: string), _col10 (type: int), _col12 (type: string), _col13 (type: string), _col7 (type: float)","outputColumnNames:":["_col1","_col2","_col3","_col10","_col12","_col13","_col7"],"Statistics:":"Num rows: 4791764 Data size: 660528830 Basic stats: COMPLETE Column stats: NONE","children":{"Group By Operator":{"aggregations:":["sum(_col7)"],"keys:":"_col1 (type: string), _col2 (type: string), _col3 (type: string), _col10 (type: int), _col12 (type: string), _col13 (type: string)","mode:":"hash","outputColumnNames:":["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],"Statistics:":"Num rows: 4791764 Data size: 660528830 Basic stats: COMPLETE Column stats: NONE","children":{"Reduce Output Operator":{"key expressions:":"_col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: int), _col4 (type: string), _col5 (type: string)","sort order:":"++++++","Map-reduce partition columns:":"_col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: int), _col4 (type: string), _col5 (type: string)","Statistics:":"Num rows: 4791764 Data size: 660528830 Basic stats: COMPLETE Column stats: NONE","value expressions:":"_col6 (type: double)"}}}}}}}}}}}}}}}}}}]},"Map 6":{"Map Operator Tree:":[{"TableScan":{"alias:":"date_dim","Statistics:":"Num rows: 73049 Data size: 10244389 Basic stats: COMPLETE Column stats: NONE","children":{"Filter Operator":{"predicate:":"((d_year) IN (2000) and d_date_sk is not null) (type: boolean)","Statistics:":"Num rows: 18262 Data size: 2561062 Basic stats: COMPLETE Column stats: NONE","children":{"Select Operator":{"expressions:":"d_date_sk (type: int), d_moy (type: int)","outputColumnNames:":["_col0","_col2"],"Statistics:":"Num rows: 18262 Data size: 2561062 Basic stats: COMPLETE Column stats: NONE","children":{"Reduce Output Operator":{"key expressions:":"_col0 (type: int)","sort order:":"+","Map-reduce partition columns:":"_col0 (type: int)","Statistics:":"Num rows: 18262 Data size: 2561062 Basic stats: COMPLETE Column stats: NONE","value expressions:":"_col2 (type: int)"}}}}}}}}]},"Map 7":{"Map Operator Tree:":[{"TableScan":{"alias:":"store","Statistics:":"Num rows: 102 Data size: 26983 Basic stats: COMPLETE Column stats: NONE","children":{"Filter Operator":{"predicate:":"s_store_sk is not null (type: boolean)","Statistics:":"Num rows: 51 Data size: 13491 Basic stats: COMPLETE Column stats: NONE","children":{"Select Operator":{"expressions:":"s_store_sk (type: int), s_store_name (type: string), s_company_name (type: string)","outputColumnNames:":["_col0","_col1","_col2"],"Statistics:":"Num rows: 51 Data size: 13491 Basic stats: COMPLETE Column stats: NONE","children":{"Reduce Output Operator":{"key expressions:":"_col0 (type: int)","sort order:":"+","Map-reduce partition columns:":"_col0 (type: int)","Statistics:":"Num rows: 51 Data size: 13491 Basic stats: COMPLETE Column stats: NONE","value expressions:":"_col1 (type: string), _col2 (type: string)"}}}}}}}}]},"Reducer 3":{"Reduce Operator Tree:":{"Group By Operator":{"aggregations:":["sum(VALUE._col0)"],"keys:":"KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: int), KEY._col4 (type: string), KEY._col5 (type: string)","mode:":"mergepartial","outputColumnNames:":["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],"Statistics:":"Num rows: 2395882 Data size: 330264415 Basic stats: COMPLETE Column stats: NONE","children":{"Select Operator":{"expressions:":"_col2 (type: string), _col1 (type: string), _col0 (type: string), _col4 (type: string), _col5 (type: string), _col3 (type: int), _col6 (type: double)","outputColumnNames:":["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],"Statistics:":"Num rows: 2395882 Data size: 330264415 Basic stats: COMPLETE Column stats: NONE","children":{"Reduce Output Operator":{"key expressions:":"_col0 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string)","sort order:":"++++","Map-reduce partition columns:":"_col0 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string)","Statistics:":"Num rows: 2395882 Data size: 330264415 Basic stats: COMPLETE Column stats: NONE","value expressions:":"_col1 (type: string), _col5 (type: int), _col6 (type: double)"}}}}}}},"Reducer 4":{"Reduce Operator Tree:":{"Select Operator":{"expressions:":"KEY.reducesinkkey0 (type: string), VALUE._col0 (type: string), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey3 (type: string), VALUE._col1 (type: int), VALUE._col2 (type: double)","outputColumnNames:":["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],"Statistics:":"Num rows: 2395882 Data size: 330264415 Basic stats: COMPLETE Column stats: NONE","children":{"PTF Operator":{"Function definitions:":[{"Input definition":{"input alias:":"ptf_0","output shape:":"_col0: string, _col1: string, _col2: string, _col3: string, _col4: string, _col5: int, _col6: double","type:":"WINDOWING"}},{"Windowing table definition":{"input alias:":"ptf_1","name:":"windowingtablefunction","order by:":"_col0, _col2, _col3, _col4","partition by:":"_col0, _col2, _col3, _col4","raw input shape:":{},"window functions:":[{"window function definition":{"alias:":"avg_window_0","arguments:":"_col6","name:":"avg","window function:":"GenericUDAFAverageEvaluatorDouble","window frame:":"PRECEDING(MAX)~FOLLOWING(MAX)"}}]}}],"Statistics:":"Num rows: 2395882 Data size: 330264415 Basic stats: COMPLETE Column stats: NONE","children":{"Select Operator":{"expressions:":"avg_window_0 (type: double), _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: int), _col6 (type: double)","outputColumnNames:":["avg_window_0","_col0","_col1","_col2","_col3","_col4","_col5","_col6"],"Statistics:":"Num rows: 2395882 Data size: 330264415 Basic stats: COMPLETE Column stats: NONE","children":{"Filter Operator":{"predicate:":"(CASE WHEN ((avg_window_0 <> 0.0)) THEN ((abs((_col6 - avg_window_0)) / avg_window_0)) ELSE (null) END > 0.1) (type: boolean)","Statistics:":"Num rows: 798627 Data size: 110088092 Basic stats: COMPLETE Column stats: NONE","children":{"Select Operator":{"expressions:":"_col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: int), _col6 (type: double), avg_window_0 (type: double)","outputColumnNames:":["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],"Statistics:":"Num rows: 798627 Data size: 110088092 Basic stats: COMPLETE Column stats: NONE","children":{"Reduce Output Operator":{"key expressions:":"(_col6 - _col7) (type: double), _col3 (type: string)","sort order:":"++","Statistics:":"Num rows: 798627 Data size: 110088092 Basic stats: COMPLETE Column stats: NONE","value expressions:":"_col0 (type: string), _col1 (type: string), _col2 (type: string), _col4 (type: string), _col5 (type: int), _col6 (type: double), _col7 (type: double)"}}}}}}}}}}}}},"Reducer 5":{"Reduce Operator Tree:":{"Select Operator":{"expressions:":"VALUE._col0 (type: string), VALUE._col1 (type: string), VALUE._col2 (type: string), KEY.reducesinkkey1 (type: string), VALUE._col3 (type: string), VALUE._col4 (type: int), VALUE._col5 (type: double), VALUE._col6 (type: double)","outputColumnNames:":["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],"Statistics:":"Num rows: 798627 Data size: 110088092 Basic stats: COMPLETE Column stats: NONE","children":{"Limit":{"Number of rows:":"100","Statistics:":"Num rows: 100 Data size: 13700 Basic stats: COMPLETE Column stats: NONE","children":{"File Output Operator":{"compressed:":"false","Statistics:":"Num rows: 100 Data size: 13700 Basic stats: COMPLETE Column stats: NONE","table:":{"input format:":"org.apache.hadoop.mapred.TextInputFormat","output format:":"org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat","serde:":"org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"}}}}}}}}}}},"Stage-0":{"Fetch Operator":{"limit:":"100","Processor Tree:":{"ListSink":{}}}}}}
